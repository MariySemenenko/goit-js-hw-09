{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIQC,GADOC,SAASC,cAAc,QACvBD,SAASC,cAAc,cACvBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBACvBD,SAASC,cAAc,UACxBD,SAASC,cAAc,uBAIvC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAEpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,IAXPL,EAAKc,iBAAiB,UAiBtB,SAAyBC,GACvBA,EAAEC,iBAMF,IALF,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBJ,MAAOQ,EAAiBJ,EAAjBK,KAAMC,EAAWN,EAAXO,OACfC,EAAaC,OAAON,EAAMO,OAC1BC,EAAQF,OAAOL,EAAKM,OACpBE,EAASH,OAAOH,EAAOI,OAElBG,EAAI,EAAGA,GAAKD,EAASC,GAAK,EAAG,CAGpC3B,EAAc2B,EAFKL,GAGhBM,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAU6B,EAAKD,EAALnB,MACjBf,EAAAoC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAANH,EAAM,M,IAE9DI,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUkC,EAAKN,EAALnB,MAClBf,EAAAoC,OAAOK,QAAQ,sBAAqCH,OAAfhC,EAAS,QAAYgC,OAANE,EAAM,M,IAE5Db,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n  const body = document.querySelector('body');\n  const form = document.querySelector('form.form');\n  const step = document.querySelector('[name=\"step\"]');\n  const amount = document.querySelector('[name=\"amount\"]');\n  const submit = document.querySelector('button');\n  const delay = document.querySelector('input[name=\"delay\"]');\n\nform.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n\nfunction onPromiseCreate(e) {\n  e.preventDefault();\nconst { delay, step, amount } = e.currentTarget.elements;\n  let valueDelay = Number(delay.value);\n  let steps = Number(step.value);\n  let amounts= Number(amount.value);\n\n  for (let i = 1; i <= amounts; i += 1) {\n    let promiseDelay = valueDelay;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      valueDelay += steps;\n      \n      }\n}\n\n\n\n "],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay2","step1","step","amount1","amount","valueDelay","Number","value","steps","amounts","i","then","param","delay3","Notify","success","concat","catch","delay4","failure"],"version":3,"file":"03-promises.ef4d26e9.js.map"}