{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGeC,SAASC,cAAc,QAApC,MACMC,EAAOF,SAASC,cAAc,aACvBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBACvBD,SAASC,cAAc,UACxBD,SAASC,cAAc,uBAIvC,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAEpBM,EAAO,C,SAAEP,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAXbH,EAAKY,iBAAiB,UAiBtB,SAAyBC,GACvBA,EAAEC,iBACJ,MAAQH,MAAAI,EAAOC,KAAAC,EAAMC,OAAAC,GAAWN,EAAEO,cAAcC,SAC9C,IAAIC,EAAaC,OAAOR,EAAMS,OAC1BC,EAAQF,OAAON,EAAKO,OACpBE,EAASH,OAAOJ,EAAOK,OAE3B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAASC,GAAK,EAAG,CAGpC1B,EAAc0B,EAFKL,GAGhBM,MAAK,EAAC1B,SAAEA,EAAUS,MAAAkB,MACjBjC,EAAAkC,OAAOC,QAAQ,uBAAqB7B,QAAiB2B,MAAU,IAEhEG,OAAM,EAAC9B,SAAEA,EAAUS,MAAAsB,MAClBrC,EAAAkC,OAAOI,QAAQ,sBAAoBhC,QAAe+B,MAAU,IAE9DX,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n  const body = document.querySelector('body');\n  const form = document.querySelector('form.form');\n  const step = document.querySelector('[name=\"step\"]');\n  const amount = document.querySelector('[name=\"amount\"]');\n  const submit = document.querySelector('button');\n  const delay = document.querySelector('input[name=\"delay\"]');\n\nform.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n\nfunction onPromiseCreate(e) {\n  e.preventDefault();\nconst { delay, step, amount } = e.currentTarget.elements;\n  let valueDelay = Number(delay.value);\n  let steps = Number(step.value);\n  let amounts= Number(amount.value);\n\n  for (let i = 1; i <= amounts; i += 1) {\n    let promiseDelay = valueDelay;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n      valueDelay += steps;\n      \n      }\n}\n\n\n\n "],"names":["$iQIUW","parcelRequire","document","querySelector","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","delay2","step","step1","amount","amount1","currentTarget","elements","valueDelay","Number","value","steps","amounts","i","then","delay3","Notify","success","catch","delay4","failure"],"version":3,"file":"03-promises.4913ed81.js.map"}